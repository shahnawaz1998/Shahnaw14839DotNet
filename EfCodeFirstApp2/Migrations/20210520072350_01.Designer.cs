// <auto-generated />
using System;
using EfCodeFirstApp2;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EfCodeFirstApp2.Migrations
{
    [DbContext(typeof(BookDBContext))]
    [Migration("20210520072350_01")]
    partial class _01
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EfCodeFirstApp2.Book", b =>
                {
                    b.Property<int>("BookID")
                        .HasColumnType("int");

                    b.Property<string>("BookName")
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("PublisherID")
                        .HasColumnType("int");

                    b.HasKey("BookID");

                    b.HasIndex("PublisherID");

                    b.ToTable("Book");
                });

            modelBuilder.Entity("EfCodeFirstApp2.Member", b =>
                {
                    b.Property<int>("MemberID")
                        .HasColumnType("int");

                    b.Property<string>("MemberName")
                        .HasColumnType("varchar(20)");

                    b.HasKey("MemberID");

                    b.ToTable("Member");
                });

            modelBuilder.Entity("EfCodeFirstApp2.Publisher", b =>
                {
                    b.Property<int>("PublisherID")
                        .HasColumnType("int");

                    b.Property<string>("Country")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("PublisherName")
                        .HasColumnType("varchar(20)");

                    b.HasKey("PublisherID");

                    b.ToTable("Publisher");
                });

            modelBuilder.Entity("EfCodeFirstApp2.Review", b =>
                {
                    b.Property<int>("ReviewID")
                        .HasColumnType("int");

                    b.Property<int?>("BookID")
                        .HasColumnType("int");

                    b.Property<int?>("MemberID")
                        .HasColumnType("int");

                    b.Property<string>("ReviewText")
                        .HasColumnType("varchar(20)");

                    b.HasKey("ReviewID");

                    b.HasIndex("BookID");

                    b.HasIndex("MemberID");

                    b.ToTable("Review");
                });

            modelBuilder.Entity("EfCodeFirstApp2.Book", b =>
                {
                    b.HasOne("EfCodeFirstApp2.Publisher", "Publisher")
                        .WithMany("Books")
                        .HasForeignKey("PublisherID");

                    b.Navigation("Publisher");
                });

            modelBuilder.Entity("EfCodeFirstApp2.Review", b =>
                {
                    b.HasOne("EfCodeFirstApp2.Book", "Book")
                        .WithMany()
                        .HasForeignKey("BookID");

                    b.HasOne("EfCodeFirstApp2.Member", "Member")
                        .WithMany()
                        .HasForeignKey("MemberID");

                    b.Navigation("Book");

                    b.Navigation("Member");
                });

            modelBuilder.Entity("EfCodeFirstApp2.Publisher", b =>
                {
                    b.Navigation("Books");
                });
#pragma warning restore 612, 618
        }
    }
}
